import { useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { useRef } from "react";
import { BsArrowLeft } from "react-icons/bs";
import { RiSearchLine } from "react-icons/ri";
import Layout from "~/components/Layout";
import Navbar from "~/components/Navbar/Navbar";
import { api } from "~/utils/api";
import Tabs from "~/components/common/Tabs/Tabs";
import Profile from "~/components/User/Profile";

type Props = {};

const ProfilePage = (props: Props) => {
  const router = useRouter();
  const { data: session, status } = useSession();
  const username = router.query.username as string;
  const { data } = api.user.profile.useQuery(
    { username },
    {
      enabled: username !== undefined,
    }
  );

  const ref = useRef<HTMLDivElement>(null);

  if (status === "loading") {
    return <p>Loading...</p>;
  }

  if (status === "unauthenticated") {
    router.push(`/signin?redirect=${router.asPath}`);
    return <p>Access Denied</p>;
  }

  if (!session?.user.isRegistered) {
    router.push("/register?redirect=/");
  }

  if (!data) {
    //TODO: handle error
    return <div>loading...</div>;
  }
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Navbar />
        <div className="bg-white ">
          <header className="sticky top-0 z-20 flex h-[53px] items-center bg-white">
            {/* TODO: blurry background */}
            <button onClick={() => router.back()}>
              <div className="mr-10 h-full w-5 pl-4">
                <BsArrowLeft />
              </div>
            </button>
            <div className="flex flex-col">
              <span className="text-xl font-bold">{data.name}</span>
              <span className="-mt-1 text-gray-600">0 posts</span>
              {/* TODO: Add post count */}
            </div>
          </header>
          <Profile user={data} session={session!} />
          <Tabs
            element={ref && ref.current}
            tabCount={4}
            tabNames={["Posts", "Replies", "Media", "Likes"]}
          >
            <div>Posts</div>
            <div>Replies</div>
            <div>Media</div>
            <div>Likes</div>
          </Tabs>
          <div ref={ref} className="mt-4 h-[500vh]">
            {/* this is where for you and following are portalled */}
          </div>
        </div>
        <div className=" bg-white">
          <form className="sticky top-3 mt-3  rounded-full border border-white focus-within:border-blue-500">
            <label>
              <input
                className="peer w-full rounded-full p-3 pl-12 outline-none"
                type="search"
                placeholder="Search..."
              ></input>
              <RiSearchLine className="absolute left-0 top-0 ml-3 mt-[14px] h-5 w-5 peer-focus:text-blue-500 " />
              {/* TODO: add suggestions */}
            </label>
          </form>
          <div className="h-[200vh]">a</div>
        </div>
      </Layout>
    </>
  );
};

export default ProfilePage;
