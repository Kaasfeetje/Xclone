import { useContext, useRef } from "react";
import Head from "next/head";
import Layout from "~/components/Layout";
import Navbar from "~/components/Navbar/Navbar";
import { RiSearchLine } from "react-icons/ri";
import { useSession } from "next-auth/react";
import { useRouter } from "next/router";
import Xlogo from "~/components/Xlogo";
import { NavbarContext } from "~/context/NavbarContext";
import Tabs from "~/components/common/Tabs/Tabs";

export default function Home() {
  const router = useRouter();

  const { data: session, status } = useSession();
  const { setIsOpen } = useContext(NavbarContext);

  const ref = useRef<HTMLDivElement>(null);

  if (status === "loading") {
    return <p>Loading...</p>;
  }

  if (status === "unauthenticated") {
    router.push("/signin?redirect=/");
    return <p>Access Denied</p>;
  }

  if (!session?.user.isRegistered) {
    router.push("/register?redirect=/");
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Navbar />
        <div className="bg-white">
          {/* <div className="flex"> */}
          <header className="sticky top-0 w-full">
            <div className="relative flex items-center justify-center p-4 lg:justify-start lg:p-0">
              <button
                onClick={() => setIsOpen(true)}
                className="absolute left-4 lg:hidden"
              >
                <img
                  className="rounded-full"
                  src={session?.user.profilePicture}
                  width={32}
                  height={32}
                />
              </button>
              <Xlogo className="h-7 lg:hidden" />
              <h1 className="hidden h-full w-full cursor-pointer py-4 text-xl font-bold lg:block">
                {router.asPath === "/" ? "Home" : router.asPath}
              </h1>
            </div>
            <Tabs tabNames={["For you", "Following"]} element={ref.current}>
              <button>For you</button>
              <button>Following</button>
            </Tabs>
          </header>
          <div ref={ref} className="mt-4 h-[500vh]">
            a
          </div>
        </div>
        <div className=" bg-white">
          <form className="sticky top-3 mt-3  rounded-full border border-white focus-within:border-blue-500">
            <label>
              <input
                className="peer w-full rounded-full p-3 pl-12 outline-none"
                type="search"
                placeholder="Search..."
              ></input>
              <RiSearchLine className="absolute left-0 top-0 ml-3 mt-[14px] h-5 w-5 peer-focus:text-blue-500 " />
              {/* TODO: add suggestions */}
            </label>
          </form>
          <div className="h-[200vh]">a</div>
        </div>
      </Layout>
    </>
  );
}
